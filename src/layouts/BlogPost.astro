---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";

type Props = CollectionEntry<"blog">["data"];

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  author,
  tags,
  readingtime,
} = Astro.props;
---

<html lang="de">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      main {
        width: calc(100% - 2em);
        max-width: 100%;
        margin: 0;
      }
      .hero-image {
        width: 100%;
        max-width: 100%;
        margin: 0 auto;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 18px;
      }
      .prose {
        width: 720px;
        max-width: calc(100% - 2em);
        margin: auto;
        padding: 1em;
        color: rgb(var(--gray-dark));
      }
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
        font-size: 0.9em;
        text-align: left;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
        white-space: normal;
        overflow: visible;
        text-overflow: clip;
        font-size: clamp(1.5em, 4vw, 2.5em);
      }
      .date {
        margin-bottom: 1em;
        margin-top: 0.5em;
        color: rgb(var(--gray));
        font-size: 0.9em;
      }
      .last-updated-on {
        font-style: italic;
      }
      .description {
        font-size: 1.2em;
      }
      .author {
        margin-bottom: 0;
        font-size: 1em;
        font-style: italic;
      }
      .tags_reading {
        color: rgb(0, 0, 0);
      }
      @media (prefers-color-scheme: dark) {
        main {
          background-color: #2f2f2f;
        }
        .prose {
          color: rgb(228, 228, 228);
        }
        .title h1 {
          color: rgb(228, 228, 228);
        }
        .date {
          color: rgb(228, 228, 228);
        }
        .author {
          color: rgb(228, 228, 228);
        }
        .tags_reading {
          color: rgb(228, 228, 228);
        }
        .last-updated-on {
          color: rgb(228, 228, 228);
        }
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article>
        <div class="hero-image">
          {
            heroImage && (
              <img
                width={750}
                height={Math.round(750 / (16 / 9))}
                src={heroImage}
                alt=""
              />
            )
          }
        </div>
        <div class="prose">
          <div class="title">
            <h1>{title}</h1>
            <p>{description}</p>
            <div class="date">
              <FormattedDate date={pubDate} />
              {
                updatedDate && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
            <p class="tags_reading_author">
              üè∑Ô∏è{tags} |üïõ{readingtime} |üñäÔ∏è{author}
            </p>
            <hr />
          </div>
          <slot />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
